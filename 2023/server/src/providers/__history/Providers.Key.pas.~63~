unit Providers.Key;

interface

type
  TKeyAuthentication = class
  private
    FKeyAuthentication: string;
    property Key: string read FKeyAuthentication;
    function GetResponseAPIChatGPT: String;
    function GetKey: string;
  public
  public
    class function New: IRequest;
    destructor Destroy; override;
  end;

implementation

uses
  System.SysUtils, Providers.Request, System.JSON;

const
  FKey = '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';

{ TKeyAuthentication }

function TKeyAuthentication.GetKey: string;
begin
  if not (FKey.IsEmpty) then
    Result := FKey
  else
    Result := 'undefined';
end;

function TKeyAuthentication.GetResponseAPIChatGPT: String;
var
  LRequest: IRequest;
  LBody: TJSONObject;
begin
  LRequest := TRequest.New
    .BaseURL('https://api.openai.com/v1/chat/completions')
    .AddHeader('Authorization: Bearer', FKey)
    .AddBody(LBody);
end;

end.
